---
import { convertNumberToKhmer } from "@/lib/utils";

import BlogCard from "./BlogCard.astro";
import { useTranslations } from "@/i18n/utils";
import type { CollectionEntry } from "astro:content";
import type { Language } from "@/i18n/ui";

interface Props {
  translations: Record<string, string>;
  posts: CollectionEntry<"blog">[];
  lang: Language;
}

const { posts, lang } = Astro.props;
const t = useTranslations(lang);

const ITEMS_PER_PAGE = 2;
const currentPage = Number(Astro.url.searchParams.get("page") ?? 1);
const totalPages = Math.ceil(posts.length / ITEMS_PER_PAGE);
const startIndex = (currentPage - 1) * ITEMS_PER_PAGE;
const endIndex = startIndex + ITEMS_PER_PAGE;
const currentArticles = posts.slice(startIndex, endIndex);
---

<div class="container mx-auto my-12">
  <h1 class="text-4xl font-bold text-gradient leading-normal mb-8">
    {t("newsAndEvents.sub_title")}
  </h1>

  {
    posts.length === 0 ? (
      <div class="space-y-8">
        <h1 class="text-4xl font-bold">{t("newsAndEvents.title")}</h1>
        <p class="text-muted-foreground">{t("newsAndEvents.no_posts")}</p>
      </div>
    ) : (
      <>
        <div class="space-y-4">
          {currentArticles.map((post, index) => (
            <BlogCard
              index={index}
              title={post.data.title}
              description={post.data.description}
              date={post.data.date.toISOString()}
              image={post.data.image}
              slug={post.slug}
              lang={lang}
            />
          ))}
        </div>

        <div class="mt-12">
          <nav class="flex items-center justify-center gap-2">
            <a
              href={`?page=${Math.max(currentPage - 1, 1)}`}
              class={`cursor-pointer flex text-sm font-semibold space-x-2 me-5 items-center ${
                currentPage === 1 ? "pointer-events-none opacity-50" : ""
              }`}
              aria-disabled={currentPage === 1}
            >
              <svg
                class="h-4 w-4"
                fill="none"
                stroke="currentColor"
                stroke-width="2"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  d="M15 19l-7-7 7-7"
                />
              </svg>
              <span>{t("btn.previous")}</span>
            </a>
            {Array.from({ length: totalPages }, (_, i) => i + 1).map((page) => (
              <a
                href={`?page=${page}`}
                class={`w-10 h-10 mx-1 flex items-center justify-center rounded ${
                  currentPage === page
                    ? "bg-primary text-white"
                    : "bg-muted text-primary"
                }`}
                aria-current={currentPage === page ? "page" : undefined}
              >
                {lang === "en" ? page : convertNumberToKhmer(page)}
              </a>
            ))}
            <a
              href={`?page=${Math.min(currentPage + 1, totalPages)}`}
              class={`cursor-pointer flex text-sm font-semibold space-x-2 ms-5 items-center ${
                currentPage === totalPages
                  ? "pointer-events-none opacity-50"
                  : ""
              }`}
              aria-disabled={currentPage === totalPages}
            >
              <span>{t("btn.next")}</span>
              <svg
                class="h-4 w-4"
                fill="none"
                stroke="currentColor"
                stroke-width="2"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  d="M9 5l7 7-7 7"
                />
              </svg>
            </a>
          </nav>
        </div>
      </>
    )
  }
</div>
